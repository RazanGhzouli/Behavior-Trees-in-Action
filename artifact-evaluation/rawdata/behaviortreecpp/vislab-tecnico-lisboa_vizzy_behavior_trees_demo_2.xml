<root main_tree_to_execute="BehaviorTree">
    <!-- ////////// -->
    <BehaviorTree ID="BehaviorTree">
        <SubTree ID="ChargeST"/>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="ChargeST">
        <SequenceStar>
            <Action utterance="Tenho fome" voice="pt-PT-Wavenet-D" ID="Speak" language="pt_PT" action_name="/gcloud_tts"/>
            <Action result="SUCCESS" seconds="2" ID="WaitForXSeconds" name="Wait2Seconds"/>
            <Fallback>
                <SequenceStar>
                    <RetryUntilSuccesful num_attempts="3">
                        <Action goal_pose="-1.7971;-5.5118;0.0;0;0;0.72703;0.68659" frame_id="map" ID="MoveBase" action_name="move_base" name="Go to first point"/>
                    </RetryUntilSuccesful>
                    <Parallel threshold="2">
                        <Repeat num_cycles="10">
                            <Action utterance="bip bip" voice="pt-PT-Wavenet-D" ID="Speak" language="pt_PT" action_name="/gcloud_tts"/>
                        </Repeat>
                        <Action action="charging_action" ID="Charge" action_name="CHARGE"/>
                    </Parallel>
                </SequenceStar>
            </Fallback>
        </SequenceStar>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="ArmCartesian">
            <input_port name="action_name"/>
            <input_port name="frame_id"/>
            <input_port name="pose"/>
            <input_port name="type"/>
        </Action>
        <Action ID="ArmRoutines">
            <input_port name="gesture"/>
            <input_port name="topic"/>
        </Action>
        <Action ID="Charge">
            <input_port name="action"/>
            <input_port name="action_name"/>
        </Action>
        <SubTree ID="ChargeST"/>
        <Action ID="CheckBattery">
            <output_port type="int" name="battery_state"/>
            <output_port type="double" name="percentage"/>
            <input_port type="std::string" name="service_name"/>
        </Action>
        <Condition ID="CheckBool">
            <input_port name="variable"/>
        </Condition>
        <Action ID="CheckCharging">
            <output_port type="int" name="charging_state"/>
            <input_port type="std::string" name="service_name"/>
        </Action>
        <Condition ID="CompareDouble">
            <input_port name="A"/>
            <input_port name="B"/>
            <input_port name="Condition"/>
        </Condition>
        <Condition ID="CompareInt">
            <input_port name="A"/>
            <input_port name="B"/>
            <input_port name="Condition"/>
        </Condition>
        <Action ID="DetectBlocks">
            <output_port type="social_cues::BlockList_&lt;std::allocator&lt;void> >" name="block_list"/>
            <input_port type="std::string" name="block_topic"/>
        </Action>
        <Action ID="DetectFaces">
            <output_port name="faceListOut"/>
            <input_port name="face_topic"/>
        </Action>
        <Action ID="FaceCounter">
            <input_port name="faceListIn"/>
            <input_port name="number_faces"/>
        </Action>
        <Action ID="GazeAtTarget">
            <input_port name="action_name"/>
            <input_port name="fixation_pose"/>
            <input_port name="frame_id"/>
        </Action>
        <Action ID="MoveBase">
            <input_port name="action_name"/>
            <input_port name="frame_id"/>
            <input_port name="goal_pose"/>
        </Action>
        <Action ID="SelectBlock">
            <input_port type="social_cues::BlockList_&lt;std::allocator&lt;void> >" name="block_list"/>
            <output_port type="geometry_msgs::PoseStamped_&lt;std::allocator&lt;void> >" name="block_pose"/>
            <input_port type="std::string" name="position_in_list"/>
        </Action>
        <Action ID="Speak">
            <input_port type="std::string" name="action_name"/>
            <input_port type="std::string" name="language"/>
            <input_port type="std::string" name="utterance"/>
            <input_port type="std::string" name="voice"/>
        </Action>
        <Action ID="WaitForXSeconds">
            <input_port default="SUCCESS" name="result">Result after specified time: SUCCESS or FAILURE</input_port>
            <input_port default="5" name="seconds">Time in seconds</input_port>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>

